name: Train Model on Push

# This workflow automatically trains your model whenever you push new code
# to the "main" branch of the repository.

on:
  push:
    branches:
      - main  # Trigger this workflow on every push to the main branch

jobs:
  train:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner environment

    steps:
      # Step 1: Checkout the repository code
      # This downloads the contents of your GitHub repo into the runner.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      # This installs Python 3.10 so that the code runs in a consistent environment.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install dependencies
      # This upgrades pip and installs all required libraries listed in requirements.txt.
      # Make sure your requirements.txt file is in the repository root.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Configure Weights & Biases (W&B)
      # This sets your W&B API key as an environment variable so that the training
      # script can log metrics, artifacts, and sweeps.
      # Add your key under "Settings > Secrets and variables > Actions" in your repo
      # and name it WANDB_API_KEY.
      - name: Configure Weights & Biases
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          echo "W&B configured successfully."

      # Step 5: Run training script
      # This executes your train.py file, which will:
      #  - Log the dataset and model artifacts to W&B
      #  - Perform hyperparameter tuning (sweeps)
      #  - Train and save the final model to the "models/" folder
      - name: Run training script
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          python train.py

      # Step 6: Commit and push trained model
      # After the model is trained, this step will automatically commit and push
      # the trained model (logistic_regression_tuned.pkl) back to the repository.
      # The "[skip ci]" tag prevents triggering this workflow again.
      - name: Commit and push trained model
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Add only the trained model file to avoid committing unnecessary files
          git add models/logistic_regression_tuned.pkl

          # Commit changes if there are any
          git commit -m "Auto-update trained model [skip ci]" || echo "No changes to commit"

          # Push the commit to the main branch
          git push origin main

      # Step 7: Job complete
      # This message confirms that the workflow has finished successfully.
      - name: Complete job
        run: echo "Training and model upload complete."
